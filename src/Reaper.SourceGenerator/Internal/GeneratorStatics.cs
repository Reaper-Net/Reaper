using System.Reflection;

namespace Reaper.SourceGenerator.Internal;

public static class GeneratorStatics
{
    public static AssemblyName AssemblyName = Assembly.GetExecutingAssembly().GetName();
    public static string AssemblyFullName = AssemblyName.FullName;
    public static string AssemblyVersion = AssemblyName.Version.ToString();

    public const string StepEndpoints = "Endpoints";
    public const string StepMapper = "Mapper";
    public const string StepServices = "Services";
    public const string StepValidators = "Validators";

    public const string FileHeader = """
                                     //------------------------------------------------------------------------------
                                     // <auto-generated>
                                     //     This code was generated by a cool tool.
                                     //
                                     //     Changes to this file may cause incorrect behavior and will be lost if
                                     //     the code is regenerated.
                                     // </auto-generated>
                                     //------------------------------------------------------------------------------

                                     #nullable enable
                                     
                                     """;

    public static string CodeInterceptorAttribute = $$"""
                                                      namespace System.Runtime.CompilerServices
                                                      {
                                                          [System.CodeDom.Compiler.GeneratedCodeAttribute("{{AssemblyFullName}}", "{{AssemblyVersion}}")]
                                                          [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]
                                                          file sealed class InterceptsLocationAttribute : Attribute
                                                          {
                                                              public InterceptsLocationAttribute(string filePath, int line, int column)
                                                              {
                                                              }
                                                          }
                                                      }
                                                      
                                                      """;

    public static string GeneratedCodeAttribute = $"[System.CodeDom.Compiler.GeneratedCodeAttribute(\"{AssemblyFullName}\", \"{AssemblyVersion}\")]";
    
    public const string MethodImplAggressiveInlining = "[MethodImpl(MethodImplOptions.AggressiveInlining)]";
}